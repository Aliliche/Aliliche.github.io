 ajouter un vlan apres avoir probe le module 
--------------------------------------------
$ inserer le module 80211q
$ip link add link eno1 name eno1.100 type vlan id 100 

$ ip addr add 10.125.0.10/19 brd + dev eno1.100

$ip link set up  eno1.100



compiler le package mac80211
----------------------------
les sources nouveau sont dans backport, c'est ceux la qu'on compile 
make package/kernel/mac80211/compile 

le dossier contient un makefile qui va chercher les sources tout seule 
tu vas dans buildir/backport/mac80211 tu va trouver un mac80211.ko genérer le plus recement 
tu envois sur le produit et tu reboot  pour qu'il prenne les dépendance 



compiler iwinfo 
---------------
tu compile normalement dans package et surtout ! tu envois le binaire et 
libiwinfo.so si non tu vois pas tes print



iw_cli /wpa_supplicant 
----------------------
wpa command line pour interagir avec wpa_supplicant
wpa_cli -i wlan0 -p /var/run/wpa_supplicant-wlan0
aussi 
pour hostapd c'est un peux diffrent 
on peux utiliser
$hostap_cli -iwlan0 -P /var/run/hostapd-phy.conf ou bien 
tu fais:
$hostap_cli -i wlan0 et tu rendre directemement dans le mode interactifs 
ou bien : 
$hostap_cli -iwlan0 [command] | grep state : les commandes hostapd regarde google
 ou bien $hostap_cli -iwlan0 -p /var/run/hostapd-phy0 : sans l'extention .conf 
 l'extention .conf est utilisé pour lancer hostapd  or hostap_cli c'est un outil pour 
 controller hostapd. 


acksys event handler
--------------------
compiler le package seule 
faire killall sur le produit et lancer à la main en mode debug 
$acksys_event_handler -d7 -f 
lancer une console avec logread -f, un autre console pour acksys_event_handler 
une autre pour des testes 


vlan, gre ..etc
----------------
Quand on configure un gre, on doit pas bridger l'interface gre dans network lan 
dans l2tunnel: on doit donner au  remote endpoint gre l'adresse de l'interface wifi distante 
on doit l'attacher notre local endpoint à notre interface wifi local 
regarder le document APNUSO18


failsafe mode
-------------
j'ai supprimé busybox et le emergency upgrade ne marche pas 
il faut rentrer dans failsafe et faire mount_root ou root_mount 
comme ça mon rootfilesystem sera dans la rom que j'ai chargé en emergency 
donc la tu supprime dans overlay /upper le fichier qui dit que j'ai supprimé busybox 

!! rectification, j'ai supprimé busy box , le emergency upgrade ne marche pas donc tu peux pas charger 
le firemware 


afficher type de socket
-----------------------
exemple type socket_raw, tu fais lsof >aa.txt

Gateway
-------

en gros la Gateway dans les routeurs acksys  exemple
lan : 192.168.91.45
mask : blabla
Gateway : 192.168.91.1 : cette Gateway je pense est l'interface de l'autre routeur  qui se trouve sur le meme reseaux 91. il sert au routeur 91.45 de passer du trafic à un reseaux disons 88.0 
sachant que ce reseaux doit avoir deux interface 88 + 91 
88.0 -------| 91.0  deux routeur |-----------------99.0
 il faut faire la différence entre les passerelles par default ou route par default qui se trouvent 
 sur un pc et celles qui se trouvent sur un routeur acksys 

debug snmpd 
-----------
activer les debug faisait cracher le produit 
cela  ne date pas de 'aujoud'huit 

pour afficher les logs sur certaines librarairie, comme par exemple default_store.c 
il faut envoyer la lib netsnmp.so 
pour ça dans la librarie du fichier , tu rendre dans .lib et tu fait string "message de ddebug" | grep fichier.o 
tu dois le voir et envoyer la lib ou c'est affiché 


OID apply
---------
quand tu fais un changement de l'OID snmpd, ilf faut appeler un OID qui fait un apply 
si non cela ne commit pas 


hospad et wpa_supplicant
------------------------
les fichiers de config de hostapdet wpa_supplicant sont genéré dans hostapd.sh 

des fonctions de network.lua sont appelée aussi 
plus exactement : 

mac80211.sh  lis le fichier de config  wireless et ecrit dans le fichier de config de hostapd et supplicant


fonctionnement de netifd et de srcc
-----------------------------------
netifd lis le fichier uci et recupere les parametres, il fait des exec des setup et des dump dans mac80211.sh 
c'est ce fichier qui crée le fichier de config de hostapdet wpa_supplicant à travers hospad.sh ( y a un lien )
et lance hosptapd et supplicant

par exemple il lit le nombre d'antenne dans le fichier uci, puis dans mac80211.sh il apelle la commande iw set 
antenna et c'est elle qui configure les antennes. 

dans le cas de srcc 
c'est srcc qui crée le fichier de config à travers srcc2_gen_cfg, donc on peut appeler la configurration des 
antennes dedans. 
on ne doit pas ecrire dans le fichier de config de srcc les antennes car les sources de srcc n'ont pas prevu ça

Cannaux 
-------
le canal primaire est celui sur le canal on beacone 

page status et setup
-------------------

dans les pages de setup on peut utiliser le fichier de configet lire des inforation d'eux 
mais dans les page de setup, on ne le fait pas on prefere utiliser ce le systeme 
c'est dire ce qui tourne actuellement
car dans le fichier de config , on peut configurer sans que sa soit trouner 
c'est afaire un apply seulement 

SGI dans luci et les apelles a iw
----------------------------------
Nous avons vu précememnt que les pages luci apellent iw ou iwinfo pour récuperer des choses 
ceci se fait soit directement sur la page soit en passant par des sgi, les sgi sont des pages de config en gros 
elle font apelle a des fonctions qui apelles iw et iwinfo , les SGI sont index.lua generalement.
generalement on les reconnait ses apelles au sgi grace à la presence dune fonction xhr.get

Fichier shadow:
==============

le fichier shadow contient le mot de passe crypté des utilisateurs, la fonction  qui cripte 
le password est crypt() c'est une fonction de libc.
elle cripte en MD5,SHA256....
la fonction qui récupere le password est dans les fichier password_u et passwo_r dans luci.

